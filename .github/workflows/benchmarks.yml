name: benchmarks

on:
  workflow_dispatch:
    inputs:
      run-id:
        description: 'Workflow run ID to download builds from'
        type: number

permissions:
  actions: read

env:
  BENCHMARKS_DIR: .benchmarks

jobs:
  amd64-macos-gcc:
    runs-on: macos-13

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          scripts/ci-run-benchmarks.sh

    - name: Download build artifact from workflow run
      if: ${{ inputs.run-id }}
      uses: actions/download-artifact@v4
      with:
        run-id: ${{ inputs.run-id }}
        path: ${{ env.BENCHMARKS_DIR }}
        pattern: zsv-*-amd64-macosx-gcc.tar.gz

    - name: Set ZSV_TAG env var
      if: ${{ inputs.run-id }}
      run: |
        ZSV_TAG="$(ls "$BENCHMARKS_DIR"/*.tar.gz" | grep -Po '(?<=zsv-).*(?=-amd)')"
        echo "ZSV_TAG=$ZSV_TAG" | tee -a "$GITHUB_ENV"

    - name: Run benchmarks
      run: ./scripts/ci-run-benchmarks.sh

  amd64-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: [gcc, clang, musl]
    continue-on-error: true

    name: amd64-linux-${{ matrix.compiler }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          scripts/ci-run-benchmarks.sh

    - name: Download build artifact from workflow run
      if: ${{ inputs.run-id }}
      uses: actions/download-artifact@v4
      with:
        run-id: ${{ inputs.run-id }}
        path: ${{ env.BENCHMARKS_DIR }}
        pattern: zsv-*-amd64-linux-${{ matrix.compiler }}.tar.gz

    - name: Set ZSV_TAG env var
      if: ${{ inputs.run-id }}
      run: |
        ZSV_TAG="$(ls "$BENCHMARKS_DIR"/*.tar.gz" | grep -Po '(?<=zsv-).*(?=-amd)')"
        echo "ZSV_TAG=$ZSV_TAG" | tee -a "$GITHUB_ENV"

    - name: Run benchmarks
      env:
        ZSV_LINUX_BUILD_COMPILER: ${{ matrix.compiler }}
      run: ./scripts/ci-run-benchmarks.sh
