name: ci-macos-codesign

on:
  push:
    paths:
    - '.github/workflows/ci-macos-codesign.yml'
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  ci:
    strategy:
      matrix:
        # os: [macos-13, macos-14]
        os: [macos-13]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
    - name: Set up zsv+lib
      id: zsv
      uses: liquidaty/zsv/setup-action@main

    - name: List and set ZSV_ROOT env var
      env:
        ZSV_ROOT: ${{ steps.zsv.outputs.install-path }}
      run: |
        ls -hl "$ZSV_ROOT"/{bin,include,lib}
        echo "ZSV_ROOT=$ZSV_ROOT" >>"$GITHUB_ENV"

    - name: Install Developer Certificate
      env:
        MACOS_CERT_P12: ${{ secrets.MACOS_CERT_P12 }}
        MACOS_CERT_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}
      run: |
        echo "$MACOS_CERT_P12" | base64 --decode > cert.p12
        security create-keychain -p actions build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p actions build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        security import cert.p12 -k build.keychain -P "$MACOS_CERT_PASSWORD" -A -t cert -f pkcs12 -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple: -s -k actions build.keychain
        security find-identity -v build.keychain

    - name: Codesign
      env:
        AC: 'Developer ID Application: matt wong (HXK8Y6Q9K2)'
        AI: 'dev.liquidaty.zsv'
      run: |
        find "$ZSV_ROOT" -type f -exec \
        codesign --verbose --deep --force --verify --options=runtime --timestamp \
            --sign "$AC" --identifier "$AI" "$ZSV_ROOT" {} +

        codesign --verbose --deep --force --verify --options=runtime --timestamp \
            --identifier "$AI" --sign "$AC" "$ZSV_ROOT"

    - name: Notarize
      env:
        AID: matt@liquidaty.com
        ASP: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        TID: HXK8Y6Q9K2
        ZIP: zsv.zip
      run: |
        echo "ZIP=$ZIP" >>"$GITHUB_ENV"
        cd "$ZSV_ROOT"
        zip -r "$ZIP" .
        mv "$ZIP" ../
        cd ..
        xcrun notarytool submit "$ZIP" \
          --apple-id "$AID" \
          --password "$ASP" \
          --team-id "$TID" \
          --wait

    - name: Staple
      run: |
        xcrun stapler staple -v "$ZIP"
        xcrun stapler validate "$ZIP"

    - name: Cleanup
      run: security delete-keychain build.keychain

    - name: Upload (${{ env.ZIP }})
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ZIP }}
        path: ${{ env.ZIP }}
        retention-days: 7
        if-no-files-found: error
